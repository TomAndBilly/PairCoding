<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-17T11:37:19 BST" name="Surefire suite" finished-at="2021-09-17T11:37:19 BST" duration-ms="133">
    <groups>
    </groups>
    <test started-at="2021-09-17T11:37:19 BST" name="Surefire test" finished-at="2021-09-17T11:37:19 BST" duration-ms="133">
      <class name="BlackJack.TestCardValue">
        <test-method signature="testCardValue()[pri:0, instance:BlackJack.TestCardValue@16414e40]" started-at="2021-09-17T11:37:19 BST" name="testCardValue" finished-at="2021-09-17T11:37:19 BST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCardValue -->
      </class> <!-- BlackJack.TestCardValue -->
      <class name="BlackJack.FaceCardTypeTest">
        <test-method signature="testFaceCard()[pri:0, instance:BlackJack.FaceCardTypeTest@4f25b795]" started-at="2021-09-17T11:37:19 BST" name="testFaceCard" finished-at="2021-09-17T11:37:19 BST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFaceCard -->
      </class> <!-- BlackJack.FaceCardTypeTest -->
      <class name="BlackJack.SuitValueTest">
        <test-method signature="testGetSuitAmount()[pri:0, instance:BlackJack.SuitValueTest@6e950bcf]" started-at="2021-09-17T11:37:19 BST" name="testGetSuitAmount" finished-at="2021-09-17T11:37:19 BST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSuitAmount -->
      </class> <!-- BlackJack.SuitValueTest -->
      <class name="BlackJack.DeckValueTest">
        <test-method signature="testDeckAmount()[pri:0, instance:BlackJack.DeckValueTest@dbd8e44]" started-at="2021-09-17T11:37:19 BST" name="testDeckAmount" finished-at="2021-09-17T11:37:19 BST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeckAmount -->
      </class> <!-- BlackJack.DeckValueTest -->
      <class name="BlackJack.SuitTypeTest">
        <test-method signature="testSuitType()[pri:0, instance:BlackJack.SuitTypeTest@6fb365ed]" started-at="2021-09-17T11:37:19 BST" name="testSuitType" finished-at="2021-09-17T11:37:19 BST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuitType -->
      </class> <!-- BlackJack.SuitTypeTest -->
      <class name="BlackJack.FaceCardCheckTest">
        <test-method signature="testSuitType()[pri:0, instance:BlackJack.FaceCardCheckTest@3549bca9]" started-at="2021-09-17T11:37:19 BST" name="testSuitType" finished-at="2021-09-17T11:37:19 BST" duration-ms="9" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[This cards is not a face card ==> expected: <true> but was: <false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: This cards is not a face card ==> expected: <true> but was: <false>
at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
at org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1135)
at BlackJack.FaceCardCheckTest.testSuitType(FaceCardCheckTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuitType -->
      </class> <!-- BlackJack.FaceCardCheckTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
